\" Manpage for ldmsd_peer_daemon_advertisement
.TH man 7 "12 December 2024" "v4" "LDMSD Peer Daemon Advertisement man page"

.\""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""/.
.SH NAME
ldmsd_peer_daemon_advertisement - Manual for LDMSD Peer Daemon Advertisement

.\""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""/.
.SH SYNOPSIS

**Peer side Commands**

.IP \fBadvertiser_add
.RI "name=" NAME " xprt=" XPRT " host=" HOST " port=" PORT " reconnect=" RECONNECT
.RI "[auth=" AUTH_DOMAIN "]"

.IP \fBadvertiser_start
.RI "name=" NAME
.RI "[xprt=" XPRT "] [host=" HOST "] [port=" PORT "] [auth=" AUTH_DOMAIN "] [reconnect=" RECONNECT "]"

.IP \fBadvertiser_stop
.RI "name=" NAME

.IP \fBadvertiser_del
.RI "name=" NAME

.IP \fBadvertiser_status
.RI "[name=" NAME "]"

.PP
**Aggregator Side Commands**

.IP \fBprdcr_listen_add
.RI "name=" NAME "
.RI "[regex=" REGEX "] [ip=" CIDR "]"
.RI "[disable_start=" TRUE|FALSE "]"
.RI "[quota=" QUOTA "] [rx_rate=" RX_RATE "] [type=" passive|active "]"
.RI "[advertiser_port=" PORT "] [advertiser_xprt=" XPRT "] [advertiser_auth" AUTH_DOM "] [rails=" RAILS "]"
.RI "[reconnect=" INTERVAL "]"

.IP \fBprdcr_listen_start
.RI "name=" NAME

.IP \fBprdcr_listen_stop
.RI "name=" NAME

.IP \fBprdcr_listen_del
.RI "name=" NAME

.IP \fBprdcr_listen_status

.SH DESCRIPTION

LDMSD Peer Daemon Advertisement is a capability that enables LDMSD to
automatically add producers for advertising peers whose hostname matches a regular
expression or whose IP address is in a range. The feature reduces the need for
manual configuration of producers in configuration files.

LDMSD supports two types of advertised producers: passive and active. In
passive mode (default), the aggregator accepts connections from advertising
peers for data transfer. In active mode, after receiving an advertisement from
a peer, the aggregator initiates a separate connection to the advertising peer using
specified transport parameters (port, authentication, rail size, etc.).  Active
mode enables administrators to control data transfer resouces through rail size
configuration and separate data transfer from communication channels.

Administrators specify the aggregator's hostname and listening port in the peer's
configuration via the \fBadvertiser_add\fR command and start the advertisement
with the \fBadvertiser_start\fR command. The peer daemon advertises their
hostname to the aggregator. On the aggregator, administrators specify a regular
expression to be matched with the peer hostname or an IP range that the peer IP
address falls in via the \fBprdcr_listen_add\fR command. The
\fBprdcr_listen_start\fR command is used to tell the aggregator to
automatically add producers corresponding to a peer daemon whose hostname
matches the regular expression or whose IP address falls in the IP range. If
neither a regular expression nor an IP range is given, the aggregator will
create a producer upon receiving any advertisement messages.

The auto-generated producers are of the ‘advertised’ type. The producer name is
\fB<host:port>\fR, where \fBhost\fR is the peer hostname, and \fBport\fR is the
first listening port of the peer daemon. LDMSD automatically starts the
advertised producers, unless the 'disable_start' attribute is given on the
\fBprdcr_listen_add\fR line. The advertised producers need to be stopped
manually by using the command \fBprdcr_stop\fR or \fBprdcr_stop_regex\fR. They
can be restarted by using the command \fBprdcr_start\fR or
\fBprdcr_start_regex\fR. If type=active is specified at \fBprdcr_listen_add\fR
line, the advertised producers will behave as active producers.

The description for each command and its parameters are as follows.

**Peer Side Commands**

\fBadvertiser_add\fR adds a new advertisement. The parameters are:
.RS
.IP \fBname\fR=\fINAME
Advertiser name
.IP \fBhost\fR=\fIHOST
Aggregator hostname
.IP \fBxprt\fR=\fIXPRT
Transport to connect to the aggregator
.IP \fBport\fR=\fIPORT
Listen port of the aggregator
.IP \fBreconnect\fR=\fIINTERVAL
Reconnect interval
.IP \fB[auth\fR=\fIAUTH_DOMAIN\fB]
The authentication domain to be used to connect to the aggregator
.RE

\fBadvertiser_start\fR starts an advertisement. If the advertiser does not
exist, LDMSD will create the advertiser. In this case, the mandatory attributes
for \fBadvertiser_add\fB must be given. The parameters are:
.RS
.IP \fBname\fR=\fINAME
Name of the advertiser to be started
.IP \fB[host\fR=\fIHOST\fB]
Aggregator hostname
.IP \fB[xprt\fR=\fIXPRT\fB]
Transport to connect to the aggregator
.IP \fB[port\fR=\fIPORT\fB]
Listen port of the aggregator
.IP \fB[reconnect\fR=\fIINTERVAL\fB]
Reconnect interval
.IP \fB[auth\fR=\fIAUTH_DOMAIN\fB]
The authentication domain to be used to connect to the aggregator
.RE

\fBadvertiser_stop\fR stops an advertisement. The parameters are:
.RS
.IP \fBname\fR=\fINAME
Nmae of the advertiser to be stopped
.RE

\fBadvertiser_del\fR deletes an advertisement. The parameters are:
.RS
.IP \fBname\fR=\fINAME
Name of the advertiser to be deleted
.RE

\fBadvertiser_status reports the status of each advertisement. An optional parameter is:
.RS
.IP \fB[name\fR=\fINAME\fB]
Advertiser name
.RE

.PP
**Aggregator Side commands**

\fBprdcr_listen_add\fR adds a prdcr_listen. The parameters are:
.RS
.IP \fBname\fR=\fINAME
String of the prdcr_listen name
.IP \fB[type\fR=\fIpassive|active\fB]
Type of advertised producers. Default is passive.

- passive: aggregator accepts connections from advertising peers

- active: upon receiving an advertisement, aggregator initiates a separate connection back to the advertising peer. Requires advertiser_xprt, advertiser_port, reconnect parameters, and authentication domain if it is used
.IP \fB[regex\fR=\fIREGEX\fB]
Regular expression to match with hostnames of peer daemons
.IP \fB[ip\fR=\fICIDR\fB]
IP Range in the CIDR format either in IPV4
.IP \fB[quota\fR=\fIQUOTA\fB
Controls the amount of data that can be received on connections from advertising peers. Functions like the quota parameter in prdcr_add. If not specified, defaults to the value set by the --quota option when starting the LDMS daemon. If neither --quota nor this parameter is specified, there is no limit on receive quota.
.IP \fB[rx_rate=RX_RATE\fB]
Controls the rate of data received (in bytes/second) on connections from advertising peers. Functions like the rx_rate parameter in prdcr_add. Unluck quota which limits total received data, rx_rate limits the data flow per second. If not specified, the receive rate is unlimited
.IP \fB[disable_start\fR=\fITRUE|FALSE\fB]
True to tell LDMSD not to start producers automatically
.IP \fB[advertiser_port=PORT\fB]
Port number of the advertising peer to connect to. Functions like the port parameter in prdcr_add. Required when type=active
.IP \fB[advertiser_xprt=XPRT\fB]
Transport type to use when connecting to advertising peers. Functions like the xprt in prdcr_add. Required when type=active
.IP \fB[advertiser_auth=AUTH_DOM\fB]
Authentication domain for connections to advertising peers. Functions like the auth in prdcr_add. If it is omitted when type=active, the default authentication is used to connect to advertising peers
.IP \fB[reconnect=INTERVAL\fB]
Reconnection Interval. Functions like the reconnect in prdcr_add. Required when type=active
.RE

\fBprdcr_listen_start\fR starts accepting peer advertisement with matches hostnames. The parameters are:
.RS
.IP \fBname\fR=\fINAME
Name of prdcr_listen to be started
.RE

\fBprdcr_listen_stop\fR stops accepting peer advertisement with matches hostnames. The parameters are:
.RS
.IP \fBname\fR=\fINAME
Name of prdcr_listen to be stopped
.RE

\fBprdcr_listen_del\fR deletes a prdcr_listen. The parameters are:
.RS
.IP \fBname\fR=\fINAME
Name of prdcr_listen to be deleted
.RE

\fBprdcr_listen_status\fR report the status of each prdcr_listen object. There is no parameter.

.SH EXAMPLE

In this example, there are three LDMS daemons running on \fBnode-1\fR,
\fBnode-2\fR, and \fBnode-3\fR. LDMSD running on \fBnode-1\fR and \fBnode-2\fR
are sampler daemons, namely \fBsamplerd-1\fR and \fBsamplerd-2\fR. The
aggregator (\fBagg11\fR) runs on \fBnode-3\fR. All LDMSD listen on port 411.

The sampler daemons collect the \fBmeminfo\fR set, and they are configured to
advertise themselves and connect to the aggregator using sock on host
\fBnode-3\fR at port 411. They will try to reconnect to the aggregator every 10
seconds until the connection is established. Once the connection is
established, they will send an advertisement to the aggregator. The following
are the configuration files of the \fBsamplerd-1\fR and \fBsamplerd-2\fR.

.EX
.B
> cat samplerd-1.conf
.RS 4
# Add and start an advertisement
advertiser_add name=agg11 xprt=sock host=node-3 port=411 reconnect=10s
advertiser_start name=agg11
# Load, configure, and start the meminfo plugin
load name=meminfo
config name=meminfo producer=samplerd-1 instance=samplerd-1/meminfo
start name=meminfo interval=1s
.RE

.B
> cat samplerd-2.conf
.RS 4
# Add and start an advertisement using only the advertiser_start command
advertiser_start name=agg11 host=node-3 port=411 reconnect=10s
# Load, configure, and start the meminfo plugin
load name=meminfo
config name=meminfo producer=samplerd-2 instance=samplerd-2/meminfo
start name=meminfo interval=1s
.RE
.EE

The aggregator is configured to accept advertisements from the sampler daemons
that the hostnames match the regular expressions \fBnode0[1-2]\fR.

.EX
.B
> cat agg.conf
.RS 4
# Accept advertisements sent from LDMSD running on hostnames matched node-[1-2]
prdcr_listen_add name=computes regex=node-[1-2]
prdcr_listen_start name=computes
# Add and start an updater
updtr_add name=all_sets interval=1s offset=100ms
updtr_prdcr_add name=all_sets regex=.*
updtr_start name=all_sets
.RE
.EE

LDMSD provides the command \fBadvertiser_status\fR to report the status of
advertisement of a sampler daemon.

.EX
.B
> ldmsd_controller -x sock -p 411 -h node-1
Welcome to the LDMSD control processor
sock:node-1:411> advertiser_status
Name             Aggregator Host  Aggregator Port Transport    Reconnect (us)         State
---------------- ---------------- --------------- ------------ --------------- ------------
agg11                      node-3             411         sock        10000000    CONNECTED
sock:node-1:411>
.EE

Similarly, LDMSD provides the command \fBprdcr_listen_status\fR to report the
status of all prdcr_listen objects on an aggregator. The command also reports
the list of auto-added producers corresponding to each prdcr_listen object.

.EX
.B
> ldmsd_controller -x sock -p 411 -h node-3
Welcome to the LDMSD control processor
sock:node-3:411> prdcr_listen_status
Name                 State      Type     IP Range                       Regex
-------------------- ---------- -------- ------------------------------ --------------------
computes             running    passive  -                              node-[1-2]
    Connect config: None
Producers: node-1:411, node-2:411

sock:node-3:411>
.EE

Below is an example of prdcr_status output of advertised producers. The example
uses the --cmd cmd-line option to provide the prdcr_status command at the start
line instead of starting an interactive session.

.EX
.B
> ldmsd_controller -x sock -p 411 -h node-3 --cmd 'prdcr_status'
Name             Host             Port         Transport    auth             State        Type
---------------- ---------------- ------------ ------------ ---------------- ------------ --------------------
node-1:10001     node-1                  42210 sock         DEFAULT          CONNECTED    advertised, passive
    samplerd-1/meminfo meminfo          READY
    samplerd-1/procnetdev2 procnetdev2      READY
node-2:10001     node-2                  42212 sock         DEFAULT          CONNECTED    advertised, passive
    samplerd-2/meminfo meminfo          READY
    samplerd-2/procnetdev2 procnetdev2      READY
.EE

Active Mode Example:

This example demonstrates how to configure active mode producers where the
aggregator initiates the connection request upon receiving an advertisement
from advertising peers. The configuration shows how to set up multiple rails
for enhanced data transfer performance and how to separate the configuration
channel from the data channel using different port. The sampler daemons run on
\fBnode-1\fR and \fBnode-2\fR. The aggregator runs on \fBnode-3\fR.

.EX
.B
> cat samplerd-1.conf
.RS 4
# Set up the default authentication domain
default_auth plugin=munge
# Listen on port 411 for configuration using the default authentication
listen port=411 xprt=sock
# Listen on port 412 for data using the default authentication
listen port=412 xprt=sock
# Add and start an advertisement
advertiser_add name=agg11 xprt=sock host=node-3 port=411 reconnect=10s
advertiser_start name=agg11
# Load, configure, and start the meminfo plugin
load name=meminfo
config name=meminfo producer=samplerd-1 instance=samplerd-1/meminfo
start name=meminfo interval=1s
.RE

.B
> cat samplerd-2.conf
.RS 4
# Set up the default authentication domain
default_auth plugin=munge
# Listen on port 411 for configuration using the default authentication
listen port=411 xprt=sock
# Listen on port 412 for data using the default authentication
listen port=412 xprt=sock
# Add and start an advertisement
advertiser_add name=agg11 xprt=sock host=node-3 port=411 reconnect=10s
advertiser_start name=agg11
# Load, configure, and start the meminfo plugin
load name=meminfo
config name=meminfo producer=samplerd-2 instance=samplerd-2/meminfo
start name=meminfo interval=1s
.RE

.B
> cat agg.conf
.RS 4
# Set up the default authentication domain
default_auth plugin=munge
# Listen on port 411 for configuration using the default authentication
listen port=411 xprt=sock
# Listen on port 412 for data using the default authentication
listen port=412 xprt=sock
# Accept advertisements and create active producers connecting to the data port
# 412 using the default authentication
prdcr_listen_add name=computes type=active regex=node-[1-2] advertiser_port=412 advertiser_xprt=sock rail=4 reconnect=1m
prdcr_listen_start name=computes
.RE
.EE

.EX
.B
> ldmsd_controller -x sock -p 411 -h node-3 -a munge
Welcome to the LDMSD control processor
sock:node-3:411> prdcr_listen_status
Name                 State      Type     IP Range                       Regex
-------------------- ---------- -------- ------------------------------ --------------------
computes             running    active   -                              node-[1-2]
    Connect config: xprt=sock port=412 reconnect=1m rail=4
Producers: node-1:411, node-2:411

sock:node-3:411>
.EE

Below is an example of prdcr_status output of advertised producers. Note that
the port numbers in the Port column is the port the advertised producers send a
connection request to the peers, which are the port the sampler daemons open
for data transfer.

.EX
.B
> ldmsd_controller -x sock -p 411 -h node-3 -a munge --cmd 'prdcr_status'
Name             Host             Port         Transport    auth             State        Type
---------------- ---------------- ------------ ------------ ---------------- ------------ --------------------
node-1:10001     node-1                    412 sock         DEFAULT          CONNECTED    advertised, active
    samplerd-1/meminfo meminfo          READY
    samplerd-1/procnetdev2 procnetdev2      READY
node-2:10001     node-2                    412 sock         DEFAULT          CONNECTED    advertised, active
    samplerd-2/meminfo meminfo          READY
    samplerd-2/procnetdev2 procnetdev2      READY
.EE

.SH SEE ALSO
.BR ldmsd (8)
.BR ldmsd_controller (8)
